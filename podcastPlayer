#!/bin/sh

action="$(printf "New\nPause\nUnpause\nJump\nStop\nInfo" | dmenu -i)"

test "$action" != "New" && test -z "$(pgrep mpv)" && notify-send "‚ùå MPV is not running, exiting" && exit 1

case $action in
	New)
		podcastLink=$(printf "" | dmenu -i -p "Link:")		
		mpv -vo null "$podcastLink" --input-ipc-server=/tmp/mpv-socket || notify-send "‚ùå MPV exited"
	;;
	Pause)		
		echo '{ "command": ["set_property", "pause", true] }' | socat - /tmp/mpv-socket
		notify-send "‚èØ Paused Stream"
	;;
	Unpause)	
		echo '{ "command": ["set_property", "pause", false] }' | socat - /tmp/mpv-socket
		notify-send "‚èØ Unpaused Stream"
	;;
	Jump)		
		skipTo=$(printf "" | dmenu -i -p "Skip To:")		
		echo "{ \"command\": [\"set_property\", \"time-pos\", \"$skipTo\"] }" | socat - /tmp/mpv-socket
		notify-send "‚è© Jumped to $skipTo"
	;;
	Stop)		
		pkill mpv
		notify-send "‚èπKilled Stream"
	;;
	Info)
		duration="$(echo '{ "command": ["get_property", "time-pos"] }' | socat - /tmp/mpv-socket | jq .data)"
		info="‚è≤ $(date -d@$duration -u +%M:%S) "
		info="$info\nüìõ $(echo '{ "command": ["get_property", "media-title"] }' | socat - /tmp/mpv-socket | jq .data)"
		info="$info\nÔäï $(echo '{ "command": ["get_property", "percent-pos"] }' | socat - /tmp/mpv-socket | jq .data)"

		notify-send "üì∫ Stream Information" "$(printf "$info")"
		
	;;
esac


